{"version":3,"sources":["App.js","index.js"],"names":["numbers","operations","ids","7","8","9","4","5","6","1","2","3","0","App","state","lastPressed","undefined","calc","operation","handleClick","e","innerText","target","setState","evaluated","eval","splitted","split","last","slice","includes","lastNumberIdx","reverse","findIndex","char","length","this","className","id","onClick","map","num","op","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"w9CAGMA,QAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtCC,WAAa,CAAC,IAAK,IAAK,IAAK,KAC7BC,IAAM,CACVC,EAAG,QACHC,EAAG,QACHC,EAAG,OACHC,EAAG,OACHC,EAAG,OACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,QACHC,EAAG,OACH,IAAK,SACL,IAAK,WACL,IAAK,WACL,IAAK,OAGDC,I,gzBACJC,MAAQ,CACNC,iBAAaC,EACbC,KAAM,IACNC,eAAWF,G,MAGbG,YAAc,SAACC,GAAO,IAAD,YACW,MAAKN,MAA3BG,KADW,YACXA,KAAMF,YADK,YACLA,YACNM,UAAcD,EAAEE,OAAhBD,UAER,OAAQA,WACN,IAAK,KACH,MAAKE,SAAS,CACZN,KAAM,MAER,MAGF,IAAK,IACH,IAAMO,UAAYC,KAAKR,MACvB,MAAKM,SAAS,CACZN,KAAMO,YAER,MAGF,IAAK,IACH,IAAME,SAAWT,KAAKU,MAAM,WACtBC,KAAOF,SAASG,OAAO,GAAG,GAE3BD,KAAKE,SAAS,MACjB,MAAKP,SAAS,CACZN,KAAMA,KAAO,MAIjB,MAGF,QACE,IAAIG,QAAIJ,EACR,GAAIf,WAAW6B,SAAST,WACtB,GAAIpB,WAAW6B,SAASf,cAA8B,MAAdM,UAAmB,CACzD,IAAMU,cAAgBd,KACnBU,MAAM,IACNK,UACAC,WAAU,SAACC,GAAD,MAAmB,MAATA,GAAgBlC,QAAQ8B,UAAUI,MACzDd,GAAIH,KAAKY,MAAM,EAAGZ,KAAKkB,OAASJ,eAA5B,WAAiDV,UAAjD,UAEJD,GAAC,UAAMH,KAAN,YAAcI,UAAd,UAGHD,GAAa,MAATH,KAAeI,UAAYJ,KAAOI,UAGxC,MAAKE,SAAS,CACZN,KAAMG,KAKZ,MAAKG,SAAS,CACZR,YAAaM,a,wOAIP,IAAD,OACCJ,EAASmB,KAAKtB,MAAdG,KAER,OACE,mEAAKoB,UAAU,aAAf,UACE,kEAAKC,GAAG,UAAUD,UAAU,UAA5B,SACGpB,IAGH,mEAAKoB,UAAU,oBAAf,UACE,qEACEA,UAAU,mBACVE,QAASH,KAAKjB,YACdmB,GAAG,QAHL,gBAeCtC,QAAQwC,KAAI,SAACC,GAAD,OACX,qEACEJ,UAAS,eAAkB,IAARI,GAAa,SAEhCF,QAAS,EAAKpB,YACdmB,GAAIpC,IAAIuC,GAJV,SAMGA,GAJIA,MAQT,qEAAQJ,UAAU,OAAOE,QAASH,KAAKjB,YAAamB,GAAG,UAAvD,kBAIF,mEAAKD,UAAU,uBAAf,UACGpC,WAAWuC,KAAI,SAACE,GAAD,OACd,qEACEL,UAAU,OAEVE,QAAS,EAAKpB,YACdmB,GAAIpC,IAAIwC,GAJV,SAMGA,GAJIA,MAQT,qEACEL,UAAU,cACVE,QAASH,KAAKjB,YACdmB,GAAG,SAHL,yB,KAvHQK,6CAAMC,WAoIT/B,2B,gGCpJfgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9e4ab7b7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst numbers = [7, 8, 9, 4, 5, 6, 1, 2, 3, 0];\nconst operations = [\"/\", \"*\", \"-\", \"+\"];\nconst ids = {\n  7: \"seven\",\n  8: \"eight\",\n  9: \"nine\",\n  4: \"four\",\n  5: \"five\",\n  6: \"six\",\n  1: \"one\",\n  2: \"two\",\n  3: \"three\",\n  0: \"zero\",\n  \"/\": \"divide\",\n  \"*\": \"multiply\",\n  \"-\": \"subtract\",\n  \"+\": \"add\",\n};\n\nclass App extends React.Component {\n  state = {\n    lastPressed: undefined,\n    calc: \"0\",\n    operation: undefined,\n  };\n\n  handleClick = (e) => {\n    const { calc, lastPressed } = this.state;\n    const { innerText } = e.target;\n\n    switch (innerText) {\n      case \"AC\": {\n        this.setState({\n          calc: \"0\",\n        });\n        break;\n      }\n\n      case \"=\": {\n        const evaluated = eval(calc);\n        this.setState({\n          calc: evaluated,\n        });\n        break;\n      }\n\n      case \".\": {\n        const splitted = calc.split(/[+\\-*/]/);\n        const last = splitted.slice(-1)[0];\n\n        if (!last.includes(\".\")) {\n          this.setState({\n            calc: calc + \".\",\n          });\n        }\n\n        break;\n      }\n\n      default: {\n        let e = undefined;\n        if (operations.includes(innerText)) {\n          if (operations.includes(lastPressed) && innerText !== \"-\") {\n            const lastNumberIdx = calc\n              .split(\"\")\n              .reverse()\n              .findIndex((char) => char !== \" \" && numbers.includes(+char));\n            e = calc.slice(0, calc.length - lastNumberIdx) + ` ${innerText} `;\n          } else {\n            e = `${calc} ${innerText} `;\n          }\n        } else {\n          e = calc === \"0\" ? innerText : calc + innerText;\n        }\n\n        this.setState({\n          calc: e,\n        });\n      }\n    }\n\n    this.setState({\n      lastPressed: innerText,\n    });\n  };\n\n  render() {\n    const { calc } = this.state;\n\n    return (\n      <div className=\"calculator\">\n        <div id=\"display\" className=\"display\">\n          {calc}\n        </div>\n\n        <div className=\"numbers-container\">\n          <button\n            className=\"bigger-h grey ac\"\n            onClick={this.handleClick}\n            id=\"clear\"\n          >\n            AC\n          </button>\n          {/* <button\n            className=\"cyan divide\"\n            onClick={this.handleClick}\n            id=\"divide\"\n          >\n            /\n          </button> */}\n\n          {numbers.map((num) => (\n            <button\n              className={`grey ${num === 0 && \"big-h\"}`}\n              key={num}\n              onClick={this.handleClick}\n              id={ids[num]}\n            >\n              {num}\n            </button>\n          ))}\n\n          <button className=\"grey\" onClick={this.handleClick} id=\"decimal\">\n            .\n          </button>\n        </div>\n        <div className=\"operations-container\">\n          {operations.map((op) => (\n            <button\n              className=\"cyan\"\n              key={op}\n              onClick={this.handleClick}\n              id={ids[op]}\n            >\n              {op}\n            </button>\n          ))}\n\n          <button\n            className=\"cyan equals\"\n            onClick={this.handleClick}\n            id=\"equals\"\n          >\n            =\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}